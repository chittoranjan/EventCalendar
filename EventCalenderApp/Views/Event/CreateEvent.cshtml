@model EventCalenderApp.Models.ViewModels.EventDetailViewModel

@{
    ViewBag.Title = "Create Event";
}

<h2>Create Event</h2>

@using (Html.BeginForm()) 
{
    @Html.AntiForgeryToken()
    
    <div class="form-horizontal">
        <hr/>
        @if (TempData["msg"] != null)
        {
            <div class="alert alert-info">
                @Html.Raw(TempData["msg"])
            </div>
        }

        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        <div class="form-group">
            @Html.LabelFor(model => model.EventTitle, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.EventTitle, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.EventTitle, "", new { @class = "text-danger" })
            </div>
        </div>
        <div class="form-group">
            @Html.Partial("_EventTypeDropDown", Model.EventTypeDropDownVm)
        </div>
        <div id="div_subcategory" class="form-group">
            @Html.Partial("_EventVenueDropDown", Model.EventVenueDropDownVm)
        </div>
        <div class="form-group">
            @Html.LabelFor(model => model.EventStarTime, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor( model => model.EventStarTime, new { htmlAttributes = new { @class = "form-control datepicker",@Value=DateTime.Now } })
                @Html.ValidationMessageFor(model => model.EventStarTime, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.EventEndTime, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.EventEndTime, new { htmlAttributes = new { @class = "form-control datepicker", @Value = DateTime.Now } })
                @Html.ValidationMessageFor(model => model.EventEndTime, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.EventMaxBookingTime, htmlAttributes: new {@class = "control-label col-md-2"})
            <div class="col-md-10">
                @Html.EditorFor(model => model.EventMaxBookingTime, new {htmlAttributes = new {@class = "form-control datepicker", @Value = DateTime.Now } })
                @Html.ValidationMessageFor(model => model.EventMaxBookingTime, "", new {@class = "text-danger"})
            </div>
        </div>
        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input type="submit" value="Create" class="btn btn-info" />
            </div>
        </div>
    </div>
}

<div>
    @Html.ActionLink("Back to List", "ViewEvent","Event")
</div>

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}
